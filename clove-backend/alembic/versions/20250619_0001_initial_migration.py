"""20250619_0001_initial_migration

Revision ID: 20250619_0001
Revises: 
Create Date: 2025-06-19 23:26:01.336425

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '20250619_0001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('topics',
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('theme', sa.String(length=50), nullable=True, server_default='space'),
    sa.PrimaryKeyConstraint('topic_id')
    )
    op.create_index(op.f('ix_topics_topic_id'), 'topics', ['topic_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('is_adaptive', sa.Boolean(), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('login_attempts', sa.Integer(), nullable=False),
    sa.Column('last_failed_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_cooldown_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('profile_photo_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('recent_topic_id', sa.Integer(), nullable=True),
    sa.Column('last_login_date', sa.Date(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=False),
    sa.Column('login_days_this_week', sa.JSON(), nullable=False, server_default=sa.text("'[]'")),
    sa.Column('total_challenges_solved', sa.Integer(), nullable=False),
    sa.Column('mode_stats', sa.JSON(), nullable=False),
    sa.Column('accuracy', sa.JSON(), nullable=False),
    sa.Column('hours_spent', sa.JSON(), nullable=False),
    sa.Column('completion_rate', sa.JSON(), nullable=False),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['recent_topic_id'], ['topics.topic_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_statistics_id'), 'statistics', ['id'], unique=False)
    op.create_table('subtopics',
    sa.Column('subtopic_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.topic_id'], ),
    sa.PrimaryKeyConstraint('subtopic_id')
    )
    op.create_index(op.f('ix_subtopics_subtopic_id'), 'subtopics', ['subtopic_id'], unique=False)
    op.create_table('user_topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('pre_assessment_completed', sa.Boolean(), nullable=True),
    sa.Column('post_assessment_completed', sa.Boolean(), nullable=True),
    sa.Column('is_unlocked', sa.Boolean(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('introduction_seen', sa.Boolean(), nullable=True, server_default='false'),
    sa.Column('completed_subtopics_count', sa.Integer(), nullable=True),
    sa.Column('progress_percent', sa.Float(), nullable=True),
    sa.Column('unlocked_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_accessed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.topic_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_topics_id'), 'user_topics', ['id'], unique=False)
    op.create_table('assessment_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subtopic_id', sa.Integer(), nullable=False),
    sa.Column('question_choices_correctanswer', sa.JSON(), nullable=False),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='aq_difficulty_enum'), nullable=False),
    sa.ForeignKeyConstraint(['subtopic_id'], ['subtopics.subtopic_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_questions_id'), 'assessment_questions', ['id'], unique=False)
    op.create_table('challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subtopic_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('code_fixer', 'code_completion', 'output_tracing', name='challenge_type_enum'), nullable=False),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='difficulty_enum'), nullable=False),
    sa.Column('timer', sa.Integer(), nullable=False, comment='Time limit in seconds'),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('scenario', sa.Text(), nullable=False),
    sa.Column('story_context', sa.Text(), nullable=False),
    sa.Column('challenge_data', sa.JSON(), nullable=False),
    sa.Column('hints', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['subtopic_id'], ['subtopics.subtopic_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_challenges_id'), 'challenges', ['id'], unique=False)
    op.create_table('post_assessments',
    sa.Column('post_assessment_id', sa.Integer(), nullable=False),
    sa.Column('user_topic_id', sa.Integer(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=False),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('is_unlocked', sa.Boolean(), nullable=True, server_default='false'),
    sa.Column('is_completed', sa.Boolean(), nullable=True, server_default='false'),
    sa.Column('subtopic_scores', sa.JSON(), nullable=False),
    sa.Column('questions_answers_iscorrect', sa.JSON(), nullable=False),
    sa.Column('attempt_count', sa.Integer(), nullable=False, default=0),
    sa.Column('taken_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_topic_id'], ['user_topics.id'], ),
    sa.PrimaryKeyConstraint('post_assessment_id')
    )
    op.create_index(op.f('ix_post_assessments_post_assessment_id'), 'post_assessments', ['post_assessment_id'], unique=False)
    op.create_table('pre_assessments',
    sa.Column('pre_assessment_id', sa.Integer(), nullable=False),
    sa.Column('user_topic_id', sa.Integer(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=False),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('is_unlocked', sa.Boolean(), nullable=True, server_default='false'),
    sa.Column('is_completed', sa.Boolean(), nullable=True, server_default='false'),
    sa.Column('subtopic_scores', sa.JSON(), nullable=False),
    sa.Column('questions_answers_iscorrect', sa.JSON(), nullable=False),
    sa.Column('attempt_count', sa.Integer(), nullable=False, default=0),
    sa.Column('taken_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_topic_id'], ['user_topics.id'], ),
    sa.PrimaryKeyConstraint('pre_assessment_id')
    )
    op.create_index(op.f('ix_pre_assessments_pre_assessment_id'), 'pre_assessments', ['pre_assessment_id'], unique=False)
    op.create_table('user_subtopics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subtopic_id', sa.Integer(), nullable=False),
    sa.Column('lessons_completed', sa.Boolean(), nullable=True),
    sa.Column('practice_completed', sa.Boolean(), nullable=True),
    sa.Column('challenges_completed', sa.Boolean(), nullable=True),
    sa.Column('is_unlocked', sa.Boolean(), nullable=True, server_default='false'),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('progress_percent', sa.Float(), nullable=True),
    sa.Column('knowledge_level', sa.Float(), nullable=True),
    sa.Column('unlocked_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subtopic_id'], ['subtopics.subtopic_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_subtopics_id'), 'user_subtopics', ['id'], unique=False)
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subtopic_id', sa.Integer(), nullable=False),
    sa.Column('lessonSections', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['subtopic_id'], ['subtopics.subtopic_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.create_table('q_values',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_subtopic_id', sa.Integer(), nullable=False),
    sa.Column('q_table', sa.JSON(), nullable=False),
    sa.Column('epsilon', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['user_subtopic_id'], ['user_subtopics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_q_values_id'), 'q_values', ['id'], unique=False)
    op.create_table('user_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('is_solved', sa.Boolean(), nullable=False),
    sa.Column('last_attempted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'active', 'completed', 'cancelled', name='uc_status_enum'), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=True),
    sa.Column('session_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True, default=0, comment='Time spent on challenge in seconds'),
    sa.Column('hints_used', sa.Integer(), nullable=True, default=0, comment='Number of hints used'),
    sa.Column('partial_answer', sa.Text(), nullable=True, comment='Partial answer when challenge was cancelled'),
    sa.Column('timer_enabled', sa.Boolean(), nullable=True, comment='Whether timer was enabled for this challenge session'),
    sa.Column('hints_enabled', sa.Boolean(), nullable=True, comment='Whether hints were enabled for this challenge session'),
    sa.Column('was_cancelled', sa.Boolean(), nullable=False, server_default='false', comment='Whether this challenge was ever cancelled'),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_challenges_id'), 'user_challenges', ['id'], unique=False)
    op.create_table('challenge_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_challenge_id', sa.Integer(), nullable=False),
    sa.Column('user_answer', sa.Text(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.Column('time_spent', sa.Integer(), nullable=True, comment='Seconds'),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('attempted_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_challenge_id'], ['user_challenges.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_challenge_attempts_id'), 'challenge_attempts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_challenge_attempts_id'), table_name='challenge_attempts')
    op.drop_table('challenge_attempts')
    op.drop_index(op.f('ix_user_challenges_id'), table_name='user_challenges')
    op.drop_table('user_challenges')
    op.drop_index(op.f('ix_q_values_id'), table_name='q_values')
    op.drop_table('q_values')
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.drop_table('lessons')
    op.drop_index(op.f('ix_user_subtopics_id'), table_name='user_subtopics')
    op.drop_table('user_subtopics')
    op.drop_index(op.f('ix_pre_assessments_pre_assessment_id'), table_name='pre_assessments')
    op.drop_table('pre_assessments')
    op.drop_index(op.f('ix_post_assessments_post_assessment_id'), table_name='post_assessments')
    op.drop_table('post_assessments')
    op.drop_index(op.f('ix_challenges_id'), table_name='challenges')
    op.drop_table('challenges')
    op.drop_index(op.f('ix_assessment_questions_id'), table_name='assessment_questions')
    op.drop_table('assessment_questions')
    op.drop_index(op.f('ix_user_topics_id'), table_name='user_topics')
    op.drop_table('user_topics')
    op.drop_index(op.f('ix_subtopics_subtopic_id'), table_name='subtopics')
    op.drop_table('subtopics')
    op.drop_index(op.f('ix_statistics_id'), table_name='statistics')
    op.drop_table('statistics')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_topics_topic_id'), table_name='topics')
    op.drop_table('topics')
    # ### end Alembic commands ###
